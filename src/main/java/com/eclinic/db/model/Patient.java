package com.eclinic.db.model;

// Generated 2015-05-03 18:58:02 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Patient generated by hbm2java
 */
@Entity
@Table(name = "Patient", catalog = "eclinic")
public class Patient implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long id;
	private Address address;
	private String name;
	private String surname;
	private String pesel;
	private Date dateOfBirth;
	private String EMail;
	private String phoneNr;
	private boolean confirmed;
	private Set<PatientCard> patientCards = new HashSet<PatientCard>(0);
	private Set<Recipe> recipes = new HashSet<Recipe>(0);
	private Set<Worker> workers = new HashSet<Worker>(0);
	private Set<SickLeave> sickLeaves = new HashSet<SickLeave>(0);

	public Patient() {
	}

	public Patient(Address address, String name, String surname, String pesel,
			Date dateOfBirth, boolean confirmed) {
		this.address = address;
		this.name = name;
		this.surname = surname;
		this.pesel = pesel;
		this.dateOfBirth = dateOfBirth;
		this.confirmed = confirmed;
	}

	public Patient(Address address, String name, String surname, String pesel,
			Date dateOfBirth, String EMail, String phoneNr, boolean confirmed,
			Set<PatientCard> patientCards, Set<Recipe> recipes, Set<Worker> workers, Set<SickLeave> sickLeaves) {
		this.address = address;
		this.name = name;
		this.surname = surname;
		this.pesel = pesel;
		this.dateOfBirth = dateOfBirth;
		this.EMail = EMail;
		this.phoneNr = phoneNr;
		this.confirmed = confirmed;
		this.patientCards = patientCards;
		this.recipes = recipes;
		this.workers = workers;
		this.sickLeaves = sickLeaves;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_address", nullable = false)
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@Column(name = "name", nullable = false, length = 20)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "surname", nullable = false, length = 20)
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Column(name = "pesel", nullable = false, length = 20)
	public String getPesel() {
		return this.pesel;
	}

	public void setPesel(String pesel) {
		this.pesel = pesel;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_of_birth", nullable = false, length = 10)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Column(name = "e_mail", length = 20)
	public String getEMail() {
		return this.EMail;
	}

	public void setEMail(String EMail) {
		this.EMail = EMail;
	}

	@Column(name = "phone_nr", length = 20)
	public String getPhoneNr() {
		return this.phoneNr;
	}

	public void setPhoneNr(String phoneNr) {
		this.phoneNr = phoneNr;
	}

	@Column(name = "confirmed", nullable = false)
	public boolean isConfirmed() {
		return this.confirmed;
	}

	public void setConfirmed(boolean confirmed) {
		this.confirmed = confirmed;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<PatientCard> getPatientCards() {
		return this.patientCards;
	}

	public void setPatientCards(Set<PatientCard> patientCards) {
		this.patientCards = patientCards;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Recipe> getRecipes() {
		return this.recipes;
	}

	public void setRecipes(Set<Recipe> recipes) {
		this.recipes = recipes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Worker> getWorkers() {
		return this.workers;
	}

	public void setWorkers(Set<Worker> workers) {
		this.workers = workers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<SickLeave> getSickLeaves() {
		return this.sickLeaves;
	}

	public void setSickLeaves(Set<SickLeave> sickLeaves) {
		this.sickLeaves = sickLeaves;
	}

}
