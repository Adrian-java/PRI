package com.eclinic.db.model;

// Generated 2015-05-03 18:58:02 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Collection;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

/**
 * SystemUser generated by hbm2java
 */
@Entity
@Table(name = "System_User")
public class SystemUser implements java.io.Serializable, UserDetails {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long id;
	private Worker worker;
	private String login;
	private String password;
	private byte[] description;
	private Date registerDate;
	private Date unregisterDate;
	private Boolean isActive;
	private Boolean changedPassword;
	private String email;
	private Set<Permission> permissions = new HashSet<Permission>(0);

	public SystemUser() {
	}

	public SystemUser(Worker worker, String login, String password,
			Date registerDate, boolean isActive, boolean changedPassword,
			String email) {
		this.worker = worker;
		this.login = login;
		this.password = password;
		this.registerDate = registerDate;
		this.isActive = isActive;
		this.changedPassword = changedPassword;
		this.email = email;
	}

	public SystemUser(Worker worker, String login, String password,
			byte[] description, Date registerDate, boolean isActive,
			boolean changedPassword, String email, Set<Permission> permissions) {
		this.worker = worker;
		this.login = login;
		this.password = password;
		this.description = description;
		this.registerDate = registerDate;
		this.isActive = isActive;
		this.changedPassword = changedPassword;
		this.email = email;
		this.permissions = permissions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "Id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_worker")
	public Worker getWorker() {
		return this.worker;
	}

	public void setWorker(Worker worker) {
		this.worker = worker;
	}

	@Column(name = "login", nullable = false, length = 20)
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@Column(name = "password", nullable = false, length = 20)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "description")
	public byte[] getDescription() {
		return this.description;
	}

	public void setDescription(byte[] description) {
		this.description = description;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "register_date", nullable = false, length = 10)
	public Date getRegisterDate() {
		return this.registerDate;
	}

	public void setRegisterDate(Date registerDate) {
		this.registerDate = registerDate;
	}

	@Column(name = "is_active", nullable = false)
	public Boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "changedPassword", nullable = false)
	public Boolean isChangedPassword() {
		return this.changedPassword;
	}

	public void setChangedPassword(Boolean changedPassword) {
		this.changedPassword = changedPassword;
	}

	@Column(name = "email", nullable = false, length = 20)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUser")
	public Set<Permission> getPermissions() {
		return this.permissions;
	}

	public void setPermissions(Set<Permission> permissions) {
		this.permissions = permissions;
	}

	@Transient
	public Collection<? extends GrantedAuthority> getAuthorities() {
		return null;
	}

	@Transient
	public String getUsername() {
		return login;
	}

	@Transient
	public boolean isAccountNonExpired() {
		return true;
	}

	@Transient
	public boolean isAccountNonLocked() {
		return true;
	}

	@Transient
	public boolean isCredentialsNonExpired() {
		return true;
	}

	@Transient
	public boolean isEnabled() {
		return true;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "unregister_date", nullable = true, length = 10)
	public Date getUnregisterDate() {
		return unregisterDate;
	}

	public void setUnregisterDate(Date unregisterDate) {
		this.unregisterDate = unregisterDate;
	}

}
