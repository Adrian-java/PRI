<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Database Configuration -->
	<import resource="classes/config/spring/beans/DataSource.xml" />
	<import resource="classes/config/spring/beans/HibernateSessionFactory.xml" />
	

	<!-- Beans Declaration -->
	<import resource="classes/config/spring/beans/Bean.xml" />

	<context:component-scan base-package="com.eclinic.rest.resources" />

	<bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="ThisIsASecretSoChangeMe" />
	</bean>

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider
			user-service-ref="userService">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http realm="Protected API" use-expressions="true"
		auto-config="false" create-session="stateless" entry-point-ref="unauthorizedEntryPoint"
		authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter"
			position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/rest/user/auth"
			access="permitAll" />
		<security:intercept-url method="GET" pattern="/rest/**"
			access="hasRole('user')" />
		<security:intercept-url method="PUT" pattern="/rest/**"
			access="hasRole('admin')" />
		<security:intercept-url method="POST" pattern="/rest/**"
			access="permitAll" />
		<security:intercept-url method="DELETE"
			pattern="/rest/news/**" access="hasRole('admin')" />
	</security:http>

	<bean id="unauthorizedEntryPoint" class="com.eclinic.rest.security.UnauthorizedEntryPoint" />

	<bean class="com.eclinic.rest.security.AuthenticationTokenProcessingFilter"
		id="authenticationTokenProcessingFilter">
		<constructor-arg ref="userService" />
	</bean>

</beans>
